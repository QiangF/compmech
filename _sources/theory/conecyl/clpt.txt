.. _theory-conecyl-clpt:

=======================================
CLPT - Classical Laminated Plate Theory
=======================================

Description
===========

For the CLPT the displacement field components are:

.. math::
    u, v, w

And approximated as:

.. math::
    u = u_0(x, \theta) + z \phi_x(x, \theta) \\
    v = v_0(x, \theta) + z \phi_\theta(x, \theta) \\
    w = w_0(x, \theta) 

where `u_0, v_0, w_0` are the displacements of the shell mid-surface and
`\phi_x` and `\phi_\theta` the shell rotations along `x` and `\theta`
following the right-hand rule. For the CLPT the rotations are defined as:  

.. math::
    \phi_x = - \frac{\partial w}{\partial x} = -w_{,x} \\
    \phi_\theta = - \frac 1 r \frac{\partial w}{\partial \theta} 
           = - \frac 1 r w_{,\theta} 

For the ``ConeCyl`` implementations the displacement field is approximated
and the approximated functions can be separated as:

.. math::
    u = u_0 + u_1 + u_2\\
    v = v_0 + v_1 + v_2\\
    w = w_0 + w_1 + w_2\\

where `u_0` contains the approximation functions corresponding to the
prescribed degrees of freedom, `u_1` contains the functions independent
of `\theta` and `u_2` the functions that depend on both `x`
and `\theta`.

The aim is to have models capable of simulating the displacement field of
cones and cylinders. The approximation functions are the same
for both the Donnell's and the Sanders' models.

Models
======

Below it follows a more detailed description of each of the implementations:

- clpt_donnell_
- clpt_donnell2_
- clpt_donnell3_
- clpt_donnell4_
- clpt_donnell5_
- clpt_donnell6_
- clpt_sanders_
- clpt_sanders2_
- clpt_sanders5_
- clpt_sanders6_

 
Each model can be accessed using the ``linear_kinematics`` parameter of the
``ConeCyl`` object. For linear static analysis the most general model is the
clpt_donnell4_.

For linear buckling analysis the following models should be used for
each type of boundary conditions:

- SS1- or CC1-type: clpt_donnell2_ or clpt_sanders2_

- SS2- or CC2-type: clpt_donnell6_ or clpt_sanders6_

- SS3- or CC3-type: use the :ref:`fsdt_donnell5` (CLPT not implemented)

- SS4- or CC4-type: clpt_donnell5_ or clpt_sanders5_

- Free edges: use the :ref:`fsdt_donnell5` (CLPT not implemented)


.. _clpt_donnell:

clpt_donnell
------------

Simply supported (SS1-type) edges with the Donnell's equations. No elastic 
restraints are imposed to the shell rotation at the edges.
The approximation functions are:

.. _clpt_approx_functions:

.. math::
    u = u_0 + \sum_{i_1=1}^{m_1} {c_{i_1}}^{u} \sin{{b_x}_1}
            + \sum_{i_2=1}^{m_2} \sum_{j_2=1}^{n_2} \left(
                     {c_{i_2 j_2}}_a^{u} \sin{{b_x}_2} \sin{j_2 \theta}
                    +{c_{i_2 j_2}}_b^{u} \sin{{b_x}_2} \cos{j_2 \theta}
                  \right)
    \\    
    v = v_0 + \sum_{i_1=1}^{m_1} {c_{i_1}}^{v}\sin{{b_x}_1} 
            + \sum_{i_2=1}^{m_2} \sum_{j_2=1}^{n_2} \left(
                     {c_{i_2 j_2}}_a^{v} \sin{{b_x}_2} \sin{j_2 \theta}
                    +{c_{i_2 j_2}}_b^{v} \sin{{b_x}_2} \cos{j_2 \theta}
                  \right)
    \\
    w = w_0 + \sum_{i_1=1}^{m_1} {c_{i_1}}^{w}\sin{{b_x}_1} 
            + \sum_{i_2=1}^{m_2} \sum_{j_2=1}^{n_2} \left(
                     {c_{i_2 j_2}}_a^{w} \sin{{b_x}_2} \sin{j_2 \theta}
                    +{c_{i_2 j_2}}_b^{w} \sin{{b_x}_2} \cos{j_2 \theta}
                \right)
    \\

with:

.. math::
    {b_x}_1 = i_1 \pi \frac x L \\
    {b_x}_2 = i_2 \pi \frac x L 

Observations:

    `\checkmark` linear static implemented

    `\checkmark` linear buckling implemented

    `\checkmark` non-linear analysis implemented


.. _clpt_donnell2:

clpt_donnell2
-------------

Elastic restrained edges in `w_{,x}` and `w_{,\theta}`
with the Donnell's equations. Allows SS1- and CC1-type (or anything
in between) of boundary conditions.
The :ref:`approximation
functions <clpt_approx_functions>` are showed above and the
elastic restraints are imposed
adding to the strain energy rotational springs at the bottom and top edges.

Basically the following terms should be added to the strain energy:

.. math::
    U_{springs} = \int_\theta r_1 \left(
                      K_{Bot}^u u(x=L, \theta)^2 
                    + K_{Bot}^v v(x=L, \theta)^2
                    + K_{Bot}^w w(x=L, \theta)^2
                      \\
                    + K_{Bot}^{\phi_x} {\phi_x}(x=L, \theta)^2
                    + K_{Bot}^{\phi_\theta} {\phi_\theta}(x=L, \theta)^2
                  \right)
                  \\
                + \int_\theta r_2 \left(
                      K_{Top}^u u(x=0, \theta)^2 
                    + K_{Top}^v v(x=0, \theta)^2
                    + K_{Top}^w w(x=0, \theta)^2
                      \\
                    + K_{Top}^{\phi_x} {\phi_x}(x=0, \theta)^2
                    + K_{Top}^{\phi_\theta} {\phi_\theta}(x=0, \theta)^2
                  \right)

Note that the stiffnesses: `K_{Top}^u`, `K_{Top}^v` and `K_{Top}^w` are not used in
clpt_donnell2_, but since they are required in other implementations, it is
convinient already at this point to present the general form using 
all the elastic terms.

The equation for `U_{springs}` can be written in matrix form, and it will
result in an additional term to the linear stiffness matrix `[K_0]`. The new
stiffness matrix with the elastic constraints at the edges (`[{K_0}_e]`)
can be calculated with:

.. _elastic_constraints:

.. math::
    [{K_0}_e] = [K_0] + [K_e]

    [K_e] = \int_{\theta} { \left(
                r_1 [g_{new}]_{x=L}^T [K]_{Bot} [g_{new}]_{x=L}^.
              + r_2 [g_{new}]_{x=0}^T [K]_{Top} [g_{new}]_{x=0}^.
             \right) d\theta
            }

with :

.. math::
    [K_{Bot}] = \begin{bmatrix}
          K_{Bot}^u &       0 &       0 &              0 &             0 \\
                0 & K_{Bot}^v &       0 &              0 &             0 \\
                0 &       0 & K_{Bot}^w &              0 &             0 \\
                0 &       0 &       0 & K_{Bot}^{\phi_x} &             0 \\
                0 &       0 &       0 &              0 &K_{Bot}^{\phi_\theta} 
                    \end{bmatrix}

and:

.. math::
    [K_{Top}] = \begin{bmatrix}
          K_{Top}^u &       0 &       0 &              0 &             0 \\
                0 & K_{Top}^v &       0 &              0 &             0 \\
                0 &       0 & K_{Top}^w &              0 &             0 \\
                0 &       0 &       0 & K_{Top}^{\phi_x} &             0 \\
                0 &       0 &       0 &              0 &K_{Top}^{\phi_\theta} 
                    \end{bmatrix}


and the shape functions `[g_{new}]` contains two extra rows that are built
from the relations:

.. math::
    \phi_x = - \frac{\partial w}{\partial x} = -w_{,x} \\
    \phi_\theta = - \frac 1 r \frac{\partial w}{\partial \theta} 
                = - \frac 1 r w_{,\theta}

and therefore:

.. math::
    [g^{\phi_x}] = - \frac {\partial [g^w]} {\partial x} \\
    [g^{\phi_\theta}] = - \frac 1 r \frac {\partial [g^w]} {\partial \theta} \\
    [g_{new}]^T = \left[ [g^u], [g^v], [g^w],
                          [g^{\phi_x}], [g^{\phi_\theta}] \right]


Observations:

    `\checkmark` linear static implemented

    `\checkmark` linear buckling implemented

    `\rightarrow` non-linear analysis not implemented


.. _clpt_donnell3:

clpt_donnell3
-------------

.. NOTE:: NOT RECOMMENDED since the approximation functions will
    lead to a constant `w_{,x}` at each edge, which is a limitation
    since it does not allow the simulation of a variable `w_{,x}`
    along `\theta`, required to produce correct results.

Elastic edges in `u`, `v`, `w`, `w_{,x}` and `w_{,\theta}`
with the Donnell's equations. Comparing to clpt_donnell2_, the approximation
functions for `u_2`, `v_2` and `w_2` are relaxed at the edges by
using a `cos({b_x}_2)` instead of a `sin({b_x}_2)`, obtaining:

.. math::
    u = u_0 + \sum_{i_1=0}^{m_1} {c_{i_1}}^{u} \sin{{b_x}_1}
            + \sum_{i_2=0}^{m_2} \sum_{j_2=0}^{n_2} \left(
                     {c_{i_2 j_2}}_a^{u} \cos{{b_x}_2} \sin{j_2 \theta}
                    +{c_{i_2 j_2}}_b^{u} \cos{{b_x}_2} \cos{j_2 \theta}
                  \right)
    \\    
    v = v_0 + \sum_{i_1=0}^{m_1} {c_{i_1}}^{v}\sin{{b_x}_1} 
            + \sum_{i_2=0}^{m_2} \sum_{j_2=0}^{n_2} \left(
                     {c_{i_2 j_2}}_a^{v} \cos{{b_x}_2} \sin{j_2 \theta}
                    +{c_{i_2 j_2}}_b^{v} \cos{{b_x}_2} \cos{j_2 \theta}
                  \right)
    \\
    w = w_0 + \sum_{i_1=0}^{m_1} {c_{i_1}}^{w}\sin{{b_x}_1} 
            + \sum_{i_2=0}^{m_2} \sum_{j_2=0}^{n_2} \left(
                     {c_{i_2 j_2}}_a^{w} \cos{{b_x}_2} \sin{j_2 \theta}
                    +{c_{i_2 j_2}}_b^{w} \cos{{b_x}_2} \cos{j_2 \theta}
                \right)
    \\

The linear stiffness matrix `[K_0]` is changed using the same 
:ref:`elastic contraints used for the clpt_donnell2 <elastic_constraints>`.

Observations:

    `\checkmark` linear static implemented

    `\checkmark` linear buckling implemented

    `\rightarrow` non-linear analysis not implemented


.. _clpt_donnell4:

clpt_donnell4
-------------

Based on clpt_donnell3_ with the limiation of a constant `w_{,x}` removed
by adding new `sin({b_x}_2)` terms to `w_2`, obtaining:

.. math::
    u = u_0 + \sum_{i_1=0}^{m_1} {c_{i_1}}^{u} \sin{{b_x}_1}
            + \sum_{i_2=0}^{m_2} \sum_{j_2=0}^{n_2} \left(
                     {c_{i_2 j_2}}_a^{u} \cos{{b_x}_2} \sin{j_2 \theta}
                    +{c_{i_2 j_2}}_b^{u} \cos{{b_x}_2} \cos{j_2 \theta}
                  \right)
    \\    
    v = v_0 + \sum_{i_1=0}^{m_1} {c_{i_1}}^{v}\sin{{b_x}_1} 
            + \sum_{i_2=0}^{m_2} \sum_{j_2=0}^{n_2} \left(
                     {c_{i_2 j_2}}_a^{v} \cos{{b_x}_2} \sin{j_2 \theta}
                    +{c_{i_2 j_2}}_b^{v} \cos{{b_x}_2} \cos{j_2 \theta}
                  \right)
    \\
    w = w_0 + \sum_{i_1=0}^{m_1} {c_{i_1}}^{w}\sin{{b_x}_1} 
            + \sum_{i_2=0}^{m_2} \sum_{j_2=0}^{n_2} \left(
                     {c_{i_2 j_2}}_a^{w} \sin{{b_x}_2} \sin{j_2 \theta}
                    +{c_{i_2 j_2}}_b^{w} \sin{{b_x}_2} \cos{j_2 \theta}
                    \\
                    +{c_{i_2 j_2}}_c^{w} \cos{{b_x}_2} \sin{j_2 \theta}
                    +{c_{i_2 j_2}}_d^{w} \cos{{b_x}_2} \cos{j_2 \theta}
                \right)
    \\

The linear stiffness matrix `[K_0]` is changed using the same 
:ref:`elastic contraints used for the clpt_donnell2 <elastic_constraints>`.

Observations:

    `\checkmark` linear static implemented

    `\times` not working for linear buckling

    `\rightarrow` non-linear analysis not implemented

.. _clpt_donnell5:

clpt_donnell5
-------------

SS4- or CC4-type of boundary conditions (or anything in between).
Since the clpt_donnell4_ is not working for linear buckling and the
clpt_donnell3_ is not considering properly the flexibilty of `w_{,x}` at the
edges, this new model removes the flexibility of `w` at the edges (and
consequently of `w_{,\theta}`), allowing a better representation
of the flexibility along `w_{,x}`. Giving:

.. math::
    u = u_0 + \sum_{i_1=1}^{m_1} {c_{i_1}}^{u} \sin{{b_x}_1}
            + \sum_{i_2=1}^{m_2} \sum_{j_2=1}^{n_2} \left(
                     {c_{i_2 j_2}}_a^{u} \cos{{b_x}_2} \sin{j_2 \theta}
                    +{c_{i_2 j_2}}_b^{u} \cos{{b_x}_2} \cos{j_2 \theta}
                  \right)
    \\    
    v = v_0 + \sum_{i_1=1}^{m_1} {c_{i_1}}^{v}\sin{{b_x}_1} 
            + \sum_{i_2=1}^{m_2} \sum_{j_2=1}^{n_2} \left(
                     {c_{i_2 j_2}}_a^{v} \cos{{b_x}_2} \sin{j_2 \theta}
                    +{c_{i_2 j_2}}_b^{v} \cos{{b_x}_2} \cos{j_2 \theta}
                  \right)
    \\
    w = w_0 + \sum_{i_1=1}^{m_1} {c_{i_1}}^{w}\sin{{b_x}_1} 
            + \sum_{i_2=1}^{m_2} \sum_{j_2=1}^{n_2} \left(
                     {c_{i_2 j_2}}_a^{w} \sin{{b_x}_2} \sin{j_2 \theta}
                    +{c_{i_2 j_2}}_b^{w} \sin{{b_x}_2} \cos{j_2 \theta}
                \right)
    \\

The linear stiffness matrix `[K_0]` is changed using the same 
:ref:`elastic contraints used for the clpt_donnell2 <elastic_constraints>`.

Observations:

    `\times` not working for linear buckling implemented

    `\checkmark` linear static analysis implemented

    `\rightarrow` non-linear analysis not implemented


.. _clpt_donnell6:

clpt_donnell6
-------------

Planned to simulate the SS2- and CC2-type of boundary conditions (or anything
in between). The flexibily in `v` is removed if compared to the 
clpt_donnell5_. Giving:

.. math::
    u = u_0 + \sum_{i_1=1}^{m_1} {c_{i_1}}^{u} \sin{{b_x}_1}
            + \sum_{i_2=1}^{m_2} \sum_{j_2=1}^{n_2} \left(
                     {c_{i_2 j_2}}_a^{u} \cos{{b_x}_2} \sin{j_2 \theta}
                    +{c_{i_2 j_2}}_b^{u} \cos{{b_x}_2} \cos{j_2 \theta}
                  \right)
    \\    
    v = v_0 + \sum_{i_1=1}^{m_1} {c_{i_1}}^{v}\sin{{b_x}_1} 
            + \sum_{i_2=1}^{m_2} \sum_{j_2=1}^{n_2} \left(
                     {c_{i_2 j_2}}_a^{v} \sin{{b_x}_2} \sin{j_2 \theta}
                    +{c_{i_2 j_2}}_b^{v} \sin{{b_x}_2} \cos{j_2 \theta}
                  \right)
    \\
    w = w_0 + \sum_{i_1=1}^{m_1} {c_{i_1}}^{w}\sin{{b_x}_1} 
            + \sum_{i_2=1}^{m_2} \sum_{j_2=1}^{n_2} \left(
                     {c_{i_2 j_2}}_a^{w} \sin{{b_x}_2} \sin{j_2 \theta}
                    +{c_{i_2 j_2}}_b^{w} \sin{{b_x}_2} \cos{j_2 \theta}
                \right)
    \\

The linear stiffness matrix `[K_0]` is changed using the same 
:ref:`elastic contraints used for the clpt_donnell2 <elastic_constraints>`.

Observations:

    `\checkmark` linear buckling implemented

    `\times` not working for linear static (would work if `i_2` and `j_2`
    started at `0`, but then the linear buckling did not work...)

    `\rightarrow` non-linear analysis not implemented


.. _clpt_sanders:

clpt_sanders
------------

Simply supported edges with the Sanders's equations. The :ref:`approximation
functions <clpt_approx_functions>` are showed above and no elastic
restraints are imposed.  Counterpart of :ref:`clpt_donnell`.

Observations:

    `\checkmark` linear static implemented

    `\checkmark` linear buckling implemented

    `\checkmark` non-linear analysis implemented


.. _clpt_sanders2:

clpt_sanders2
-------------

Counterpart of :ref:`clpt_donnell2` using the Sanders non-linear equations.

Observations:

    `\checkmark` linear static implemented

    `\checkmark` linear buckling implemented

    `\rightarrow` non-linear analysis not implemented


.. _clpt_sanders5:

clpt_sanders5
-------------

Counterpart of :ref:`clpt_donnell5` using the Sanders non-linear equations.

Observations:

    `\times` not working for linear buckling implemented

    `\checkmark` linear static analysis implemented

    `\rightarrow` non-linear analysis not implemented


.. _clpt_sanders6:

clpt_sanders6
-------------

Counterpart of :ref:`clpt_donnell6` using the Sanders non-linear equations.

Observations:

    `\checkmark` linear buckling implemented

    `\times` not working for linear static (would work if `i_2` and `j_2`
    started at `0`, but then the linear buckling did not work...)

    `\rightarrow` non-linear analysis not implemented
